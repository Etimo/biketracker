# Generated by carnix 0.9.8: carnix generate-nix --src .
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# biketracker-agent-0.1.0

    crates.biketracker_agent."0.1.0" = deps: { features?(features_.biketracker_agent."0.1.0" deps {}) }: buildRustCrate {
      crateName = "biketracker-agent";
      version = "0.1.0";
      authors = [ "Teo Klestrup RÃ¶ijezon <teo.roijezon@etimo.se>" ];
      edition = "2018";
      src = include [ "Cargo.toml" " biketracker-agent" ] ./.;
      workspace_member = "biketracker-agent";
      dependencies = mapFeatures features ([
        (cratesIO.crates."config"."${deps."biketracker_agent"."0.1.0"."config"}" deps)
        (cratesIO.crates."conrod_core"."${deps."biketracker_agent"."0.1.0"."conrod_core"}" deps)
        (cratesIO.crates."conrod_derive"."${deps."biketracker_agent"."0.1.0"."conrod_derive"}" deps)
        (cratesIO.crates."conrod_glium"."${deps."biketracker_agent"."0.1.0"."conrod_glium"}" deps)
        (cratesIO.crates."conrod_winit"."${deps."biketracker_agent"."0.1.0"."conrod_winit"}" deps)
        (cratesIO.crates."failure"."${deps."biketracker_agent"."0.1.0"."failure"}" deps)
        (cratesIO.crates."futures"."${deps."biketracker_agent"."0.1.0"."futures"}" deps)
        (cratesIO.crates."glium"."${deps."biketracker_agent"."0.1.0"."glium"}" deps)
        (cratesIO.crates."nom"."${deps."biketracker_agent"."0.1.0"."nom"}" deps)
        (cratesIO.crates."reqwest"."${deps."biketracker_agent"."0.1.0"."reqwest"}" deps)
        (cratesIO.crates."serde"."${deps."biketracker_agent"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."biketracker_agent"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."tokio"."${deps."biketracker_agent"."0.1.0"."tokio"}" deps)
        (cratesIO.crates."void"."${deps."biketracker_agent"."0.1.0"."void"}" deps)
      ]
        ++ (if features.biketracker_agent."0.1.0".blurz or false then [ (crates.blurz."${deps."biketracker_agent"."0.1.0".blurz}" deps) ] else [])
        ++ (if features.biketracker_agent."0.1.0".dbus or false then [ (cratesIO.crates.dbus."${deps."biketracker_agent"."0.1.0".dbus}" deps) ] else []));
      features = mkFeatures (features."biketracker_agent"."0.1.0" or {});
    };
    features_.biketracker_agent."0.1.0" = deps: f: updateFeatures f (rec {
      biketracker_agent = fold recursiveUpdate {} [
        { "0.1.0".bluez =
          (f.biketracker_agent."0.1.0".bluez or false) ||
          (f.biketracker_agent."0.1.0".default or false) ||
          (biketracker_agent."0.1.0"."default" or false); }
        { "0.1.0".blurz =
          (f.biketracker_agent."0.1.0".blurz or false) ||
          (f.biketracker_agent."0.1.0".bluez or false) ||
          (biketracker_agent."0.1.0"."bluez" or false); }
        { "0.1.0".dbus =
          (f.biketracker_agent."0.1.0".dbus or false) ||
          (f.biketracker_agent."0.1.0".bluez or false) ||
          (biketracker_agent."0.1.0"."bluez" or false); }
        { "0.1.0".default = (f.biketracker_agent."0.1.0".default or true); }
      ];
      blurz."${deps.biketracker_agent."0.1.0".blurz}".default = true;
      config."${deps.biketracker_agent."0.1.0".config}".default = true;
      conrod_core."${deps.biketracker_agent."0.1.0".conrod_core}".default = true;
      conrod_derive."${deps.biketracker_agent."0.1.0".conrod_derive}".default = true;
      conrod_glium."${deps.biketracker_agent."0.1.0".conrod_glium}".default = true;
      conrod_winit."${deps.biketracker_agent."0.1.0".conrod_winit}".default = true;
      dbus."${deps.biketracker_agent."0.1.0".dbus}".default = true;
      failure."${deps.biketracker_agent."0.1.0".failure}".default = true;
      futures."${deps.biketracker_agent."0.1.0".futures}".default = true;
      glium."${deps.biketracker_agent."0.1.0".glium}".default = true;
      nom."${deps.biketracker_agent."0.1.0".nom}".default = true;
      reqwest."${deps.biketracker_agent."0.1.0".reqwest}".default = true;
      serde."${deps.biketracker_agent."0.1.0".serde}".default = true;
      serde_derive."${deps.biketracker_agent."0.1.0".serde_derive}".default = true;
      tokio."${deps.biketracker_agent."0.1.0".tokio}".default = true;
      void."${deps.biketracker_agent."0.1.0".void}".default = true;
    }) [
      (features_.blurz."${deps."biketracker_agent"."0.1.0"."blurz"}" deps)
      (cratesIO.features_.config."${deps."biketracker_agent"."0.1.0"."config"}" deps)
      (cratesIO.features_.conrod_core."${deps."biketracker_agent"."0.1.0"."conrod_core"}" deps)
      (cratesIO.features_.conrod_derive."${deps."biketracker_agent"."0.1.0"."conrod_derive"}" deps)
      (cratesIO.features_.conrod_glium."${deps."biketracker_agent"."0.1.0"."conrod_glium"}" deps)
      (cratesIO.features_.conrod_winit."${deps."biketracker_agent"."0.1.0"."conrod_winit"}" deps)
      (cratesIO.features_.dbus."${deps."biketracker_agent"."0.1.0"."dbus"}" deps)
      (cratesIO.features_.failure."${deps."biketracker_agent"."0.1.0"."failure"}" deps)
      (cratesIO.features_.futures."${deps."biketracker_agent"."0.1.0"."futures"}" deps)
      (cratesIO.features_.glium."${deps."biketracker_agent"."0.1.0"."glium"}" deps)
      (cratesIO.features_.nom."${deps."biketracker_agent"."0.1.0"."nom"}" deps)
      (cratesIO.features_.reqwest."${deps."biketracker_agent"."0.1.0"."reqwest"}" deps)
      (cratesIO.features_.serde."${deps."biketracker_agent"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."biketracker_agent"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.tokio."${deps."biketracker_agent"."0.1.0"."tokio"}" deps)
      (cratesIO.features_.void."${deps."biketracker_agent"."0.1.0"."void"}" deps)
    ];


# end
# biketracker-server-0.1.0

    crates.biketracker_server."0.1.0" = deps: { features?(features_.biketracker_server."0.1.0" deps {}) }: buildRustCrate {
      crateName = "biketracker-server";
      version = "0.1.0";
      authors = [ "Teo Klestrup RÃ¶ijezon <teo.roijezon@etimo.se>" ];
      edition = "2018";
      src = include [ "Cargo.toml" " biketracker-server" ] ./.;
      workspace_member = "biketracker-server";
      dependencies = mapFeatures features ([
        (cratesIO.crates."chrono"."${deps."biketracker_server"."0.1.0"."chrono"}" deps)
        (cratesIO.crates."config"."${deps."biketracker_server"."0.1.0"."config"}" deps)
        (cratesIO.crates."failure"."${deps."biketracker_server"."0.1.0"."failure"}" deps)
        (cratesIO.crates."futures"."${deps."biketracker_server"."0.1.0"."futures"}" deps)
        (cratesIO.crates."hyper"."${deps."biketracker_server"."0.1.0"."hyper"}" deps)
        (cratesIO.crates."serde"."${deps."biketracker_server"."0.1.0"."serde"}" deps)
        (cratesIO.crates."serde_derive"."${deps."biketracker_server"."0.1.0"."serde_derive"}" deps)
        (cratesIO.crates."serde_json"."${deps."biketracker_server"."0.1.0"."serde_json"}" deps)
        (crates."tokio_postgres"."${deps."biketracker_server"."0.1.0"."tokio_postgres"}" deps)
        (cratesIO.crates."uuid"."${deps."biketracker_server"."0.1.0"."uuid"}" deps)
      ]);
    };
    features_.biketracker_server."0.1.0" = deps: f: updateFeatures f (rec {
      biketracker_server."0.1.0".default = (f.biketracker_server."0.1.0".default or true);
      chrono."${deps.biketracker_server."0.1.0".chrono}".default = true;
      config."${deps.biketracker_server."0.1.0".config}".default = true;
      failure."${deps.biketracker_server."0.1.0".failure}".default = true;
      futures."${deps.biketracker_server."0.1.0".futures}".default = true;
      hyper."${deps.biketracker_server."0.1.0".hyper}".default = true;
      serde."${deps.biketracker_server."0.1.0".serde}".default = true;
      serde_derive."${deps.biketracker_server."0.1.0".serde_derive}".default = true;
      serde_json."${deps.biketracker_server."0.1.0".serde_json}".default = true;
      tokio_postgres = fold recursiveUpdate {} [
        { "${deps.biketracker_server."0.1.0".tokio_postgres}"."with-chrono-0_4" = true; }
        { "${deps.biketracker_server."0.1.0".tokio_postgres}"."with-uuid-0_7" = true; }
        { "${deps.biketracker_server."0.1.0".tokio_postgres}".default = true; }
      ];
      uuid = fold recursiveUpdate {} [
        { "${deps.biketracker_server."0.1.0".uuid}"."v4" = true; }
        { "${deps.biketracker_server."0.1.0".uuid}".default = true; }
      ];
    }) [
      (cratesIO.features_.chrono."${deps."biketracker_server"."0.1.0"."chrono"}" deps)
      (cratesIO.features_.config."${deps."biketracker_server"."0.1.0"."config"}" deps)
      (cratesIO.features_.failure."${deps."biketracker_server"."0.1.0"."failure"}" deps)
      (cratesIO.features_.futures."${deps."biketracker_server"."0.1.0"."futures"}" deps)
      (cratesIO.features_.hyper."${deps."biketracker_server"."0.1.0"."hyper"}" deps)
      (cratesIO.features_.serde."${deps."biketracker_server"."0.1.0"."serde"}" deps)
      (cratesIO.features_.serde_derive."${deps."biketracker_server"."0.1.0"."serde_derive"}" deps)
      (cratesIO.features_.serde_json."${deps."biketracker_server"."0.1.0"."serde_json"}" deps)
      (features_.tokio_postgres."${deps."biketracker_server"."0.1.0"."tokio_postgres"}" deps)
      (cratesIO.features_.uuid."${deps."biketracker_server"."0.1.0"."uuid"}" deps)
    ];


# end
# blurz-0.4.0

    crates.blurz."0.4.0" = deps: { features?(features_.blurz."0.4.0" deps {}) }: buildRustCrate {
      crateName = "blurz";
      version = "0.4.0";
      authors = [ "Attila Dusnoki <adusnoki@inf.u-szeged.hu>" ];
      src = fetchgit {
         url = "https://github.com/teozkr/blurz";
         rev = "3a9fd3f036342ecc668226f82fb69a2a900df527";
         sha256 = "00rb9q45j0p4dcx1hzf03y5l0g4wvcynz29nqdi8a1wmf1zbs73a";
         fetchSubmodules = false;
      };
      libPath = "src/lib.rs";
      dependencies = mapFeatures features ([
        (cratesIO.crates."dbus"."${deps."blurz"."0.4.0"."dbus"}" deps)
        (cratesIO.crates."hex"."${deps."blurz"."0.4.0"."hex"}" deps)
      ]);
    };
    features_.blurz."0.4.0" = deps: f: updateFeatures f (rec {
      blurz."0.4.0".default = (f.blurz."0.4.0".default or true);
      dbus."${deps.blurz."0.4.0".dbus}".default = true;
      hex."${deps.blurz."0.4.0".hex}".default = true;
    }) [
      (cratesIO.features_.dbus."${deps."blurz"."0.4.0"."dbus"}" deps)
      (cratesIO.features_.hex."${deps."blurz"."0.4.0"."hex"}" deps)
    ];


# end
# derive_state_machine_future-0.2.0

    crates.derive_state_machine_future."0.2.0" = deps: { features?(features_.derive_state_machine_future."0.2.0" deps {}) }: buildRustCrate {
      crateName = "derive_state_machine_future";
      version = "0.2.0";
      authors = [ "Nick Fitzgerald <fitzgen@gmail.com>" "Bastian KÃ¶cher <git@kchr.de>" ];
      src = fetchgit {
         url = "https://github.com/fitzgen/state_machine_future";
         rev = "97baa1d32240d7165acd5d87cadbfdf4a12afc5b";
         sha256 = "0kl0wzbral53l2j11pk30v8hz7lcp8lq37jm0lf5pxd8m32a1lqc";
         fetchSubmodules = false;
      };
      dependencies = mapFeatures features ([
]);
      features = mkFeatures (features."derive_state_machine_future"."0.2.0" or {});
    };
    features_.derive_state_machine_future."0.2.0" = deps: f: updateFeatures f (rec {
      derive_state_machine_future."0.2.0".default = (f.derive_state_machine_future."0.2.0".default or true);
    }) [];


# end
# postgres-protocol-0.4.0

    crates.postgres_protocol."0.4.0" = deps: { features?(features_.postgres_protocol."0.4.0" deps {}) }: buildRustCrate {
      crateName = "postgres-protocol";
      version = "0.4.0";
      authors = [  ];
      src = fetchgit {
         url = "https://github.com/sfackler/rust-postgres";
         rev = "4f084e7b647a26dcaa8da5301be93304cffe092f";
         sha256 = "0kp4qbg41y53hqfsq8fnl1g0lagwbd3vmg5gwdlkg1fapmhnmmpw";
         fetchSubmodules = false;
      };
    };
    features_.postgres_protocol."0.4.0" = deps: f: updateFeatures f (rec {
      postgres_protocol."0.4.0".default = (f.postgres_protocol."0.4.0".default or true);
    }) [];


# end
# state_machine_future-0.2.0

    crates.state_machine_future."0.2.0" = deps: { features?(features_.state_machine_future."0.2.0" deps {}) }: buildRustCrate {
      crateName = "state_machine_future";
      version = "0.2.0";
      authors = [ "Nick Fitzgerald <fitzgen@gmail.com>" "Bastian KÃ¶cher <git@kchr.de>" ];
      src = fetchgit {
         url = "https://github.com/fitzgen/state_machine_future";
         rev = "97baa1d32240d7165acd5d87cadbfdf4a12afc5b";
         sha256 = "0kl0wzbral53l2j11pk30v8hz7lcp8lq37jm0lf5pxd8m32a1lqc";
         fetchSubmodules = false;
      };
      dependencies = mapFeatures features ([
        (crates."derive_state_machine_future"."${deps."state_machine_future"."0.2.0"."derive_state_machine_future"}" deps)
        (cratesIO.crates."futures"."${deps."state_machine_future"."0.2.0"."futures"}" deps)
        (cratesIO.crates."rent_to_own"."${deps."state_machine_future"."0.2.0"."rent_to_own"}" deps)
      ]);
      features = mkFeatures (features."state_machine_future"."0.2.0" or {});
    };
    features_.state_machine_future."0.2.0" = deps: f: updateFeatures f (rec {
      derive_state_machine_future = fold recursiveUpdate {} [
        { "${deps.state_machine_future."0.2.0".derive_state_machine_future}"."debug_code_generation" =
          (f.derive_state_machine_future."${deps.state_machine_future."0.2.0".derive_state_machine_future}"."debug_code_generation" or false) ||
          (state_machine_future."0.2.0"."debug_code_generation" or false) ||
          (f."state_machine_future"."0.2.0"."debug_code_generation" or false); }
        { "${deps.state_machine_future."0.2.0".derive_state_machine_future}".default = true; }
      ];
      futures."${deps.state_machine_future."0.2.0".futures}".default = true;
      rent_to_own."${deps.state_machine_future."0.2.0".rent_to_own}".default = true;
      state_machine_future."0.2.0".default = (f.state_machine_future."0.2.0".default or true);
    }) [
      (features_.derive_state_machine_future."${deps."state_machine_future"."0.2.0"."derive_state_machine_future"}" deps)
      (cratesIO.features_.futures."${deps."state_machine_future"."0.2.0"."futures"}" deps)
      (cratesIO.features_.rent_to_own."${deps."state_machine_future"."0.2.0"."rent_to_own"}" deps)
    ];


# end
# tokio-postgres-0.4.0-rc.2

    crates.tokio_postgres."0.4.0-rc.2" = deps: { features?(features_.tokio_postgres."0.4.0-rc.2" deps {}) }: buildRustCrate {
      crateName = "tokio-postgres";
      version = "0.4.0-rc.2";
      authors = [  ];
      src = fetchgit {
         url = "https://github.com/sfackler/rust-postgres";
         rev = "4f084e7b647a26dcaa8da5301be93304cffe092f";
         sha256 = "0kp4qbg41y53hqfsq8fnl1g0lagwbd3vmg5gwdlkg1fapmhnmmpw";
         fetchSubmodules = false;
      };
    };
    features_.tokio_postgres."0.4.0-rc.2" = deps: f: updateFeatures f (rec {
      tokio_postgres."0.4.0-rc.2".default = (f.tokio_postgres."0.4.0-rc.2".default or true);
    }) [];


# end

  };

  biketracker_agent = crates.crates.biketracker_agent."0.1.0" deps;
  biketracker_server = crates.crates.biketracker_server."0.1.0" deps;
  __all = [ (biketracker_agent {}) (biketracker_server {}) ];
  deps.MacTypes_sys."2.1.0" = {
    libc = "0.2.48";
  };
  deps.adler32."1.0.3" = {};
  deps.aho_corasick."0.6.9" = {
    memchr = "2.1.3";
  };
  deps.andrew."0.1.6" = {
    bitflags = "1.0.4";
    line_drawing = "0.7.0";
    rusttype = "0.7.5";
    walkdir = "2.2.7";
    xdg = "2.2.0";
    xml_rs = "0.8.0";
  };
  deps.android_glue."0.2.3" = {};
  deps.antidote."1.0.0" = {};
  deps.approx."0.3.1" = {
    num_traits = "0.2.6";
  };
  deps.arrayvec."0.4.10" = {
    nodrop = "0.1.13";
  };
  deps.autocfg."0.1.2" = {};
  deps.backtrace."0.3.13" = {
    cfg_if = "0.1.6";
    rustc_demangle = "0.1.13";
    autocfg = "0.1.2";
    backtrace_sys = "0.1.28";
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.backtrace_sys."0.1.28" = {
    libc = "0.2.48";
    cc = "1.0.28";
  };
  deps.base64."0.10.1" = {
    byteorder = "1.3.1";
  };
  deps.biketracker_agent."0.1.0" = {
    blurz = "0.4.0";
    config = "0.9.2";
    conrod_core = "0.63.0";
    conrod_derive = "0.63.0";
    conrod_glium = "0.63.0";
    conrod_winit = "0.63.0";
    dbus = "0.6.4";
    failure = "0.1.5";
    futures = "0.1.25";
    glium = "0.23.0";
    nom = "4.2.0";
    reqwest = "0.9.9";
    serde = "1.0.87";
    serde_derive = "1.0.87";
    tokio = "0.1.15";
    void = "1.0.2";
  };
  deps.biketracker_server."0.1.0" = {
    chrono = "0.4.6";
    config = "0.9.2";
    failure = "0.1.5";
    futures = "0.1.25";
    hyper = "0.12.24";
    serde = "1.0.87";
    serde_derive = "1.0.87";
    serde_json = "1.0.38";
    tokio_postgres = "0.4.0-rc.2";
    uuid = "0.7.2";
  };
  deps.bitflags."1.0.4" = {};
  deps.block."0.1.6" = {};
  deps.block_buffer."0.7.0" = {
    block_padding = "0.1.3";
    byte_tools = "0.3.1";
    byteorder = "1.3.1";
    generic_array = "0.12.0";
  };
  deps.block_padding."0.1.3" = {
    byte_tools = "0.3.1";
  };
  deps.blurz."0.4.0" = {
    dbus = "0.6.4";
    hex = "0.3.2";
  };
  deps.byte_tools."0.3.1" = {};
  deps.byteorder."1.3.1" = {};
  deps.bytes."0.4.11" = {
    byteorder = "1.3.1";
    iovec = "0.1.2";
  };
  deps.cc."1.0.28" = {};
  deps.cfg_if."0.1.6" = {};
  deps.cgl."0.2.3" = {
    gleam = "0.6.8";
    libc = "0.2.48";
  };
  deps.chrono."0.4.6" = {
    num_integer = "0.1.39";
    num_traits = "0.2.6";
    time = "0.1.42";
  };
  deps.cloudabi."0.0.3" = {
    bitflags = "1.0.4";
  };
  deps.cocoa."0.18.4" = {
    bitflags = "1.0.4";
    block = "0.1.6";
    core_foundation = "0.6.3";
    core_graphics = "0.17.3";
    foreign_types = "0.3.2";
    libc = "0.2.48";
    objc = "0.2.5";
  };
  deps.config."0.9.2" = {
    lazy_static = "1.2.0";
    nom = "4.2.0";
    rust_ini = "0.13.0";
    serde = "1.0.87";
    serde_hjson = "0.8.2";
    serde_json = "1.0.38";
    toml = "0.4.10";
    yaml_rust = "0.4.2";
  };
  deps.conrod_core."0.63.0" = {
    conrod_derive = "0.63.0";
    daggy = "0.5.0";
    fnv = "1.0.6";
    num = "0.2.0";
    pistoncore_input = "0.24.0";
    rusttype = "0.7.5";
  };
  deps.conrod_derive."0.63.0" = {
    proc_macro2 = "0.4.26";
    quote = "0.6.11";
    syn = "0.15.26";
  };
  deps.conrod_glium."0.63.0" = {
    conrod_core = "0.63.0";
    glium = "0.23.0";
  };
  deps.conrod_winit."0.63.0" = {
    conrod_core = "0.63.0";
    winit = "0.18.1";
  };
  deps.core_foundation."0.5.1" = {
    core_foundation_sys = "0.5.1";
    libc = "0.2.48";
  };
  deps.core_foundation."0.6.3" = {
    core_foundation_sys = "0.6.2";
    libc = "0.2.48";
  };
  deps.core_foundation_sys."0.5.1" = {
    libc = "0.2.48";
  };
  deps.core_foundation_sys."0.6.2" = {};
  deps.core_graphics."0.17.3" = {
    bitflags = "1.0.4";
    core_foundation = "0.6.3";
    foreign_types = "0.3.2";
    libc = "0.2.48";
  };
  deps.crc32fast."1.1.2" = {
    cfg_if = "0.1.6";
  };
  deps.crossbeam."0.6.0" = {
    cfg_if = "0.1.6";
    crossbeam_channel = "0.3.8";
    crossbeam_deque = "0.6.3";
    crossbeam_epoch = "0.7.1";
    crossbeam_utils = "0.6.5";
    lazy_static = "1.2.0";
    num_cpus = "1.9.0";
    parking_lot = "0.7.1";
  };
  deps.crossbeam_channel."0.3.8" = {
    crossbeam_utils = "0.6.5";
    smallvec = "0.6.8";
  };
  deps.crossbeam_deque."0.6.3" = {
    crossbeam_epoch = "0.7.1";
    crossbeam_utils = "0.6.5";
  };
  deps.crossbeam_deque."0.7.1" = {
    crossbeam_epoch = "0.7.1";
    crossbeam_utils = "0.6.5";
  };
  deps.crossbeam_epoch."0.7.1" = {
    arrayvec = "0.4.10";
    cfg_if = "0.1.6";
    crossbeam_utils = "0.6.5";
    lazy_static = "1.2.0";
    memoffset = "0.2.1";
    scopeguard = "0.3.3";
  };
  deps.crossbeam_utils."0.6.5" = {
    cfg_if = "0.1.6";
    lazy_static = "1.2.0";
  };
  deps.crypto_mac."0.7.0" = {
    generic_array = "0.12.0";
    subtle = "1.0.0";
  };
  deps.daggy."0.5.0" = {
    petgraph = "0.4.13";
  };
  deps.darling."0.8.5" = {
    darling_core = "0.8.5";
    darling_macro = "0.8.5";
  };
  deps.darling_core."0.8.5" = {
    fnv = "1.0.6";
    ident_case = "1.0.0";
    proc_macro2 = "0.4.26";
    quote = "0.6.11";
    syn = "0.15.26";
  };
  deps.darling_macro."0.8.5" = {
    darling_core = "0.8.5";
    quote = "0.6.11";
    syn = "0.15.26";
  };
  deps.dbus."0.6.4" = {
    libc = "0.2.48";
    libdbus_sys = "0.1.5";
  };
  deps.derive_state_machine_future."0.2.0" = {};
  deps.digest."0.8.0" = {
    generic_array = "0.12.0";
  };
  deps.dlib."0.4.1" = {
    libloading = "0.5.0";
  };
  deps.downcast_rs."1.0.3" = {};
  deps.dtoa."0.4.3" = {};
  deps.encoding_rs."0.8.16" = {
    cfg_if = "0.1.6";
  };
  deps.failure."0.1.5" = {
    backtrace = "0.3.13";
    failure_derive = "0.1.5";
  };
  deps.failure_derive."0.1.5" = {
    proc_macro2 = "0.4.26";
    quote = "0.6.11";
    syn = "0.15.26";
    synstructure = "0.10.1";
  };
  deps.fake_simd."0.1.2" = {};
  deps.fallible_iterator."0.1.6" = {};
  deps.fixedbitset."0.1.9" = {};
  deps.fnv."1.0.6" = {};
  deps.foreign_types."0.3.2" = {
    foreign_types_shared = "0.1.1";
  };
  deps.foreign_types_shared."0.1.1" = {};
  deps.fuchsia_cprng."0.1.1" = {};
  deps.fuchsia_zircon."0.3.3" = {
    bitflags = "1.0.4";
    fuchsia_zircon_sys = "0.3.3";
  };
  deps.fuchsia_zircon_sys."0.3.3" = {};
  deps.futures."0.1.25" = {};
  deps.futures_cpupool."0.1.8" = {
    futures = "0.1.25";
    num_cpus = "1.9.0";
  };
  deps.generic_array."0.12.0" = {
    typenum = "1.10.0";
  };
  deps.gl_generator."0.10.0" = {
    khronos_api = "3.0.0";
    log = "0.4.6";
    xml_rs = "0.8.0";
  };
  deps.gleam."0.6.8" = {
    gl_generator = "0.10.0";
  };
  deps.glium."0.23.0" = {
    backtrace = "0.3.13";
    fnv = "1.0.6";
    glutin = "0.19.0";
    lazy_static = "1.2.0";
    smallvec = "0.6.8";
    gl_generator = "0.10.0";
  };
  deps.glutin."0.19.0" = {
    lazy_static = "1.2.0";
    libc = "0.2.48";
    shared_library = "0.1.9";
    winit = "0.18.1";
    gl_generator = "0.10.0";
    osmesa_sys = "0.1.2";
    wayland_client = "0.21.11";
    x11_dl = "2.18.3";
    android_glue = "0.2.3";
    objc = "0.2.5";
    cgl = "0.2.3";
    cocoa = "0.18.4";
    core_foundation = "0.6.3";
    core_graphics = "0.17.3";
    winapi = "0.3.6";
  };
  deps.h2."0.1.16" = {
    byteorder = "1.3.1";
    bytes = "0.4.11";
    fnv = "1.0.6";
    futures = "0.1.25";
    http = "0.1.15";
    indexmap = "1.0.2";
    log = "0.4.6";
    slab = "0.4.2";
    string = "0.1.3";
    tokio_io = "0.1.11";
  };
  deps.heck."0.3.1" = {
    unicode_segmentation = "1.2.1";
  };
  deps.hex."0.3.2" = {};
  deps.hmac."0.7.0" = {
    crypto_mac = "0.7.0";
    digest = "0.8.0";
  };
  deps.http."0.1.15" = {
    bytes = "0.4.11";
    fnv = "1.0.6";
    itoa = "0.4.3";
  };
  deps.httparse."1.3.3" = {};
  deps.hyper."0.12.24" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    futures_cpupool = "0.1.8";
    h2 = "0.1.16";
    http = "0.1.15";
    httparse = "1.3.3";
    iovec = "0.1.2";
    itoa = "0.4.3";
    log = "0.4.6";
    net2 = "0.2.33";
    time = "0.1.42";
    tokio = "0.1.15";
    tokio_executor = "0.1.6";
    tokio_io = "0.1.11";
    tokio_reactor = "0.1.8";
    tokio_tcp = "0.1.3";
    tokio_threadpool = "0.1.11";
    tokio_timer = "0.2.10";
    want = "0.0.6";
  };
  deps.hyper_tls."0.3.1" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    hyper = "0.12.24";
    native_tls = "0.2.2";
    tokio_io = "0.1.11";
  };
  deps.ident_case."1.0.0" = {};
  deps.idna."0.1.5" = {
    matches = "0.1.8";
    unicode_bidi = "0.3.4";
    unicode_normalization = "0.1.8";
  };
  deps.indexmap."1.0.2" = {};
  deps.iovec."0.1.2" = {
    libc = "0.2.48";
    winapi = "0.2.8";
  };
  deps.itoa."0.4.3" = {};
  deps.kernel32_sys."0.2.2" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.khronos_api."3.0.0" = {};
  deps.lazy_static."0.2.11" = {};
  deps.lazy_static."1.2.0" = {};
  deps.lazycell."1.2.1" = {};
  deps.libc."0.2.48" = {};
  deps.libdbus_sys."0.1.5" = {
    pkg_config = "0.3.14";
  };
  deps.libflate."0.1.19" = {
    adler32 = "1.0.3";
    byteorder = "1.3.1";
    crc32fast = "1.1.2";
  };
  deps.libloading."0.5.0" = {
    cc = "1.0.28";
    winapi = "0.3.6";
  };
  deps.line_drawing."0.7.0" = {
    num_traits = "0.2.6";
  };
  deps.linked_hash_map."0.3.0" = {
    serde = "0.8.23";
    serde_test = "0.8.23";
  };
  deps.linked_hash_map."0.5.1" = {};
  deps.lock_api."0.1.5" = {
    owning_ref = "0.4.0";
    scopeguard = "0.3.3";
  };
  deps.log."0.4.6" = {
    cfg_if = "0.1.6";
  };
  deps.malloc_buf."0.0.6" = {
    libc = "0.2.48";
  };
  deps.matches."0.1.8" = {};
  deps.md5."0.6.1" = {};
  deps.memchr."2.1.3" = {
    cfg_if = "0.1.6";
    libc = "0.2.48";
  };
  deps.memmap."0.7.0" = {
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.memoffset."0.2.1" = {};
  deps.mime."0.3.13" = {
    unicase = "2.2.0";
  };
  deps.mime_guess."2.0.0-alpha.6" = {
    mime = "0.3.13";
    phf = "0.7.24";
    unicase = "1.4.2";
    phf_codegen = "0.7.24";
  };
  deps.mio."0.6.16" = {
    iovec = "0.1.2";
    lazycell = "1.2.1";
    log = "0.4.6";
    net2 = "0.2.33";
    slab = "0.4.2";
    fuchsia_zircon = "0.3.3";
    fuchsia_zircon_sys = "0.3.3";
    libc = "0.2.48";
    kernel32_sys = "0.2.2";
    miow = "0.2.1";
    winapi = "0.2.8";
  };
  deps.mio_uds."0.6.7" = {
    iovec = "0.1.2";
    libc = "0.2.48";
    mio = "0.6.16";
  };
  deps.miow."0.2.1" = {
    kernel32_sys = "0.2.2";
    net2 = "0.2.33";
    winapi = "0.2.8";
    ws2_32_sys = "0.2.1";
  };
  deps.native_tls."0.2.2" = {
    lazy_static = "1.2.0";
    libc = "0.2.48";
    security_framework = "0.2.2";
    security_framework_sys = "0.2.3";
    tempfile = "3.0.5";
    openssl = "0.10.16";
    openssl_probe = "0.1.2";
    openssl_sys = "0.9.40";
    log = "0.4.6";
    schannel = "0.1.14";
  };
  deps.net2."0.2.33" = {
    cfg_if = "0.1.6";
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.nix."0.12.0" = {
    bitflags = "1.0.4";
    cfg_if = "0.1.6";
    libc = "0.2.48";
    void = "1.0.2";
  };
  deps.nodrop."0.1.13" = {};
  deps.nom."4.2.0" = {
    memchr = "2.1.3";
    version_check = "0.1.5";
  };
  deps.num."0.2.0" = {
    num_bigint = "0.2.2";
    num_complex = "0.2.1";
    num_integer = "0.1.39";
    num_iter = "0.1.37";
    num_rational = "0.2.1";
    num_traits = "0.2.6";
  };
  deps.num_bigint."0.2.2" = {
    num_integer = "0.1.39";
    num_traits = "0.2.6";
  };
  deps.num_complex."0.2.1" = {
    num_traits = "0.2.6";
  };
  deps.num_integer."0.1.39" = {
    num_traits = "0.2.6";
  };
  deps.num_iter."0.1.37" = {
    num_integer = "0.1.39";
    num_traits = "0.2.6";
  };
  deps.num_rational."0.2.1" = {
    num_bigint = "0.2.2";
    num_integer = "0.1.39";
    num_traits = "0.2.6";
  };
  deps.num_traits."0.1.43" = {
    num_traits = "0.2.6";
  };
  deps.num_traits."0.2.6" = {};
  deps.num_cpus."1.9.0" = {
    libc = "0.2.48";
  };
  deps.objc."0.2.5" = {
    malloc_buf = "0.0.6";
  };
  deps.opaque_debug."0.2.2" = {};
  deps.openssl."0.10.16" = {
    bitflags = "1.0.4";
    cfg_if = "0.1.6";
    foreign_types = "0.3.2";
    lazy_static = "1.2.0";
    libc = "0.2.48";
    openssl_sys = "0.9.40";
  };
  deps.openssl_probe."0.1.2" = {};
  deps.openssl_sys."0.9.40" = {
    libc = "0.2.48";
    cc = "1.0.28";
    pkg_config = "0.3.14";
  };
  deps.ordered_float."1.0.1" = {
    num_traits = "0.2.6";
  };
  deps.ordermap."0.3.5" = {};
  deps.osmesa_sys."0.1.2" = {
    shared_library = "0.1.9";
  };
  deps.owning_ref."0.4.0" = {
    stable_deref_trait = "1.1.1";
  };
  deps.parking_lot."0.7.1" = {
    lock_api = "0.1.5";
    parking_lot_core = "0.4.0";
  };
  deps.parking_lot_core."0.4.0" = {
    rand = "0.6.5";
    smallvec = "0.6.8";
    rustc_version = "0.2.3";
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.percent_encoding."1.0.1" = {};
  deps.petgraph."0.4.13" = {
    fixedbitset = "0.1.9";
    ordermap = "0.3.5";
  };
  deps.phf."0.7.24" = {
    phf_shared = "0.7.24";
  };
  deps.phf_codegen."0.7.24" = {
    phf_generator = "0.7.24";
    phf_shared = "0.7.24";
  };
  deps.phf_generator."0.7.24" = {
    phf_shared = "0.7.24";
    rand = "0.6.5";
  };
  deps.phf_shared."0.7.24" = {
    siphasher = "0.2.3";
    unicase = "1.4.2";
  };
  deps.piston_float."0.3.0" = {};
  deps.piston_viewport."0.5.0" = {
    piston_float = "0.3.0";
  };
  deps.pistoncore_input."0.24.0" = {
    bitflags = "1.0.4";
    piston_viewport = "0.5.0";
    serde = "1.0.87";
    serde_derive = "1.0.87";
  };
  deps.pkg_config."0.3.14" = {};
  deps.postgres_protocol."0.4.0" = {};
  deps.proc_macro2."0.4.26" = {
    unicode_xid = "0.1.0";
  };
  deps.quote."0.6.11" = {
    proc_macro2 = "0.4.26";
  };
  deps.rand."0.6.5" = {
    rand_chacha = "0.1.1";
    rand_core = "0.4.0";
    rand_hc = "0.1.0";
    rand_isaac = "0.1.1";
    rand_jitter = "0.1.2";
    rand_os = "0.1.2";
    rand_pcg = "0.1.1";
    rand_xorshift = "0.1.1";
    autocfg = "0.1.2";
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.rand_chacha."0.1.1" = {
    rand_core = "0.3.1";
    autocfg = "0.1.2";
  };
  deps.rand_core."0.3.1" = {
    rand_core = "0.4.0";
  };
  deps.rand_core."0.4.0" = {};
  deps.rand_hc."0.1.0" = {
    rand_core = "0.3.1";
  };
  deps.rand_isaac."0.1.1" = {
    rand_core = "0.3.1";
  };
  deps.rand_jitter."0.1.2" = {
    rand_core = "0.4.0";
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.rand_os."0.1.2" = {
    rand_core = "0.4.0";
    rdrand = "0.4.0";
    cloudabi = "0.0.3";
    fuchsia_cprng = "0.1.1";
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.rand_pcg."0.1.1" = {
    rand_core = "0.3.1";
    rustc_version = "0.2.3";
  };
  deps.rand_xorshift."0.1.1" = {
    rand_core = "0.3.1";
  };
  deps.rdrand."0.4.0" = {
    rand_core = "0.3.1";
  };
  deps.redox_syscall."0.1.51" = {};
  deps.regex."1.1.0" = {
    aho_corasick = "0.6.9";
    memchr = "2.1.3";
    regex_syntax = "0.6.5";
    thread_local = "0.3.6";
    utf8_ranges = "1.0.2";
  };
  deps.regex_syntax."0.6.5" = {
    ucd_util = "0.1.3";
  };
  deps.remove_dir_all."0.5.1" = {
    winapi = "0.3.6";
  };
  deps.rent_to_own."0.1.0" = {};
  deps.reqwest."0.9.9" = {
    base64 = "0.10.1";
    bytes = "0.4.11";
    encoding_rs = "0.8.16";
    futures = "0.1.25";
    http = "0.1.15";
    hyper = "0.12.24";
    hyper_tls = "0.3.1";
    libflate = "0.1.19";
    log = "0.4.6";
    mime = "0.3.13";
    mime_guess = "2.0.0-alpha.6";
    native_tls = "0.2.2";
    serde = "1.0.87";
    serde_json = "1.0.38";
    serde_urlencoded = "0.5.4";
    tokio = "0.1.15";
    tokio_executor = "0.1.6";
    tokio_io = "0.1.11";
    tokio_threadpool = "0.1.11";
    tokio_timer = "0.2.10";
    url = "1.7.2";
    uuid = "0.7.2";
  };
  deps.rust_ini."0.13.0" = {};
  deps.rustc_demangle."0.1.13" = {};
  deps.rustc_hash."1.0.1" = {
    byteorder = "1.3.1";
  };
  deps.rustc_version."0.2.3" = {
    semver = "0.9.0";
  };
  deps.rusttype."0.7.5" = {
    approx = "0.3.1";
    arrayvec = "0.4.10";
    crossbeam_deque = "0.7.1";
    crossbeam_utils = "0.6.5";
    linked_hash_map = "0.5.1";
    num_cpus = "1.9.0";
    ordered_float = "1.0.1";
    rustc_hash = "1.0.1";
    stb_truetype = "0.2.6";
  };
  deps.ryu."0.2.7" = {};
  deps.same_file."1.0.4" = {
    winapi_util = "0.1.2";
  };
  deps.schannel."0.1.14" = {
    lazy_static = "1.2.0";
    winapi = "0.3.6";
  };
  deps.scopeguard."0.3.3" = {};
  deps.security_framework."0.2.2" = {
    core_foundation = "0.5.1";
    core_foundation_sys = "0.5.1";
    libc = "0.2.48";
    security_framework_sys = "0.2.3";
  };
  deps.security_framework_sys."0.2.3" = {
    MacTypes_sys = "2.1.0";
    core_foundation_sys = "0.5.1";
    libc = "0.2.48";
  };
  deps.semver."0.9.0" = {
    semver_parser = "0.7.0";
  };
  deps.semver_parser."0.7.0" = {};
  deps.serde."0.8.23" = {};
  deps.serde."1.0.87" = {};
  deps.serde_hjson."0.8.2" = {
    lazy_static = "0.2.11";
    linked_hash_map = "0.3.0";
    num_traits = "0.1.43";
    regex = "1.1.0";
    serde = "0.8.23";
  };
  deps.serde_derive."1.0.87" = {
    proc_macro2 = "0.4.26";
    quote = "0.6.11";
    syn = "0.15.26";
  };
  deps.serde_json."1.0.38" = {
    itoa = "0.4.3";
    ryu = "0.2.7";
    serde = "1.0.87";
  };
  deps.serde_test."0.8.23" = {
    serde = "0.8.23";
  };
  deps.serde_urlencoded."0.5.4" = {
    dtoa = "0.4.3";
    itoa = "0.4.3";
    serde = "1.0.87";
    url = "1.7.2";
  };
  deps.sha2."0.8.0" = {
    block_buffer = "0.7.0";
    digest = "0.8.0";
    fake_simd = "0.1.2";
    opaque_debug = "0.2.2";
  };
  deps.shared_library."0.1.9" = {
    lazy_static = "1.2.0";
    libc = "0.2.48";
  };
  deps.siphasher."0.2.3" = {};
  deps.slab."0.4.2" = {};
  deps.smallvec."0.6.8" = {
    unreachable = "1.0.0";
  };
  deps.smithay_client_toolkit."0.4.4" = {
    andrew = "0.1.6";
    bitflags = "1.0.4";
    dlib = "0.4.1";
    lazy_static = "1.2.0";
    memmap = "0.7.0";
    nix = "0.12.0";
    rand = "0.6.5";
    wayland_client = "0.21.11";
    wayland_commons = "0.21.11";
    wayland_protocols = "0.21.11";
  };
  deps.stable_deref_trait."1.1.1" = {};
  deps.state_machine_future."0.2.0" = {
    derive_state_machine_future = "0.2.0";
    futures = "0.1.25";
    rent_to_own = "0.1.0";
  };
  deps.stb_truetype."0.2.6" = {
    byteorder = "1.3.1";
  };
  deps.string."0.1.3" = {};
  deps.stringprep."0.1.2" = {
    unicode_bidi = "0.3.4";
    unicode_normalization = "0.1.8";
  };
  deps.subtle."1.0.0" = {};
  deps.syn."0.15.26" = {
    proc_macro2 = "0.4.26";
    quote = "0.6.11";
    unicode_xid = "0.1.0";
  };
  deps.synstructure."0.10.1" = {
    proc_macro2 = "0.4.26";
    quote = "0.6.11";
    syn = "0.15.26";
    unicode_xid = "0.1.0";
  };
  deps.tempfile."3.0.5" = {
    cfg_if = "0.1.6";
    rand = "0.6.5";
    remove_dir_all = "0.5.1";
    redox_syscall = "0.1.51";
    libc = "0.2.48";
    winapi = "0.3.6";
  };
  deps.thread_local."0.3.6" = {
    lazy_static = "1.2.0";
  };
  deps.time."0.1.42" = {
    libc = "0.2.48";
    redox_syscall = "0.1.51";
    winapi = "0.3.6";
  };
  deps.tokio."0.1.15" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    mio = "0.6.16";
    num_cpus = "1.9.0";
    tokio_codec = "0.1.1";
    tokio_current_thread = "0.1.4";
    tokio_executor = "0.1.6";
    tokio_fs = "0.1.5";
    tokio_io = "0.1.11";
    tokio_reactor = "0.1.8";
    tokio_sync = "0.1.1";
    tokio_tcp = "0.1.3";
    tokio_threadpool = "0.1.11";
    tokio_timer = "0.2.10";
    tokio_udp = "0.1.3";
    tokio_uds = "0.2.5";
  };
  deps.tokio_codec."0.1.1" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    tokio_io = "0.1.11";
  };
  deps.tokio_current_thread."0.1.4" = {
    futures = "0.1.25";
    tokio_executor = "0.1.6";
  };
  deps.tokio_executor."0.1.6" = {
    crossbeam_utils = "0.6.5";
    futures = "0.1.25";
  };
  deps.tokio_fs."0.1.5" = {
    futures = "0.1.25";
    tokio_io = "0.1.11";
    tokio_threadpool = "0.1.11";
  };
  deps.tokio_io."0.1.11" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    log = "0.4.6";
  };
  deps.tokio_postgres."0.4.0-rc.2" = {};
  deps.tokio_reactor."0.1.8" = {
    crossbeam_utils = "0.6.5";
    futures = "0.1.25";
    lazy_static = "1.2.0";
    log = "0.4.6";
    mio = "0.6.16";
    num_cpus = "1.9.0";
    parking_lot = "0.7.1";
    slab = "0.4.2";
    tokio_executor = "0.1.6";
    tokio_io = "0.1.11";
  };
  deps.tokio_sync."0.1.1" = {
    futures = "0.1.25";
  };
  deps.tokio_tcp."0.1.3" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    iovec = "0.1.2";
    mio = "0.6.16";
    tokio_io = "0.1.11";
    tokio_reactor = "0.1.8";
  };
  deps.tokio_threadpool."0.1.11" = {
    crossbeam = "0.6.0";
    crossbeam_channel = "0.3.8";
    crossbeam_deque = "0.6.3";
    crossbeam_utils = "0.6.5";
    futures = "0.1.25";
    log = "0.4.6";
    num_cpus = "1.9.0";
    rand = "0.6.5";
    slab = "0.4.2";
    tokio_executor = "0.1.6";
  };
  deps.tokio_timer."0.2.10" = {
    crossbeam_utils = "0.6.5";
    futures = "0.1.25";
    slab = "0.4.2";
    tokio_executor = "0.1.6";
  };
  deps.tokio_udp."0.1.3" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    log = "0.4.6";
    mio = "0.6.16";
    tokio_codec = "0.1.1";
    tokio_io = "0.1.11";
    tokio_reactor = "0.1.8";
  };
  deps.tokio_uds."0.2.5" = {
    bytes = "0.4.11";
    futures = "0.1.25";
    iovec = "0.1.2";
    libc = "0.2.48";
    log = "0.4.6";
    mio = "0.6.16";
    mio_uds = "0.6.7";
    tokio_codec = "0.1.1";
    tokio_io = "0.1.11";
    tokio_reactor = "0.1.8";
  };
  deps.toml."0.4.10" = {
    serde = "1.0.87";
  };
  deps.try_lock."0.2.2" = {};
  deps.typenum."1.10.0" = {};
  deps.ucd_util."0.1.3" = {};
  deps.unicase."1.4.2" = {
    version_check = "0.1.5";
  };
  deps.unicase."2.2.0" = {
    version_check = "0.1.5";
  };
  deps.unicode_bidi."0.3.4" = {
    matches = "0.1.8";
  };
  deps.unicode_normalization."0.1.8" = {
    smallvec = "0.6.8";
  };
  deps.unicode_segmentation."1.2.1" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.unreachable."1.0.0" = {
    void = "1.0.2";
  };
  deps.url."1.7.2" = {
    idna = "0.1.5";
    matches = "0.1.8";
    percent_encoding = "1.0.1";
  };
  deps.utf8_ranges."1.0.2" = {};
  deps.uuid."0.7.2" = {
    rand = "0.6.5";
  };
  deps.vcpkg."0.2.6" = {};
  deps.version_check."0.1.5" = {};
  deps.void."1.0.2" = {};
  deps.walkdir."2.2.7" = {
    same_file = "1.0.4";
    winapi = "0.3.6";
    winapi_util = "0.1.2";
  };
  deps.want."0.0.6" = {
    futures = "0.1.25";
    log = "0.4.6";
    try_lock = "0.2.2";
  };
  deps.wayland_client."0.21.11" = {
    bitflags = "1.0.4";
    downcast_rs = "1.0.3";
    libc = "0.2.48";
    nix = "0.12.0";
    wayland_commons = "0.21.11";
    wayland_sys = "0.21.11";
    wayland_scanner = "0.21.11";
  };
  deps.wayland_commons."0.21.11" = {
    nix = "0.12.0";
    wayland_sys = "0.21.11";
  };
  deps.wayland_protocols."0.21.11" = {
    bitflags = "1.0.4";
    wayland_client = "0.21.11";
    wayland_commons = "0.21.11";
    wayland_sys = "0.21.11";
    wayland_scanner = "0.21.11";
  };
  deps.wayland_scanner."0.21.11" = {
    proc_macro2 = "0.4.26";
    quote = "0.6.11";
    xml_rs = "0.8.0";
  };
  deps.wayland_sys."0.21.11" = {
    dlib = "0.4.1";
    lazy_static = "1.2.0";
  };
  deps.winapi."0.2.8" = {};
  deps.winapi."0.3.6" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_build."0.1.1" = {};
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_util."0.1.2" = {
    winapi = "0.3.6";
  };
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.winit."0.18.1" = {
    lazy_static = "1.2.0";
    libc = "0.2.48";
    log = "0.4.6";
    parking_lot = "0.7.1";
    percent_encoding = "1.0.1";
    smithay_client_toolkit = "0.4.4";
    wayland_client = "0.21.11";
    x11_dl = "2.18.3";
    android_glue = "0.2.3";
    objc = "0.2.5";
    cocoa = "0.18.4";
    core_foundation = "0.6.3";
    core_graphics = "0.17.3";
    backtrace = "0.3.13";
    winapi = "0.3.6";
  };
  deps.ws2_32_sys."0.2.1" = {
    winapi = "0.2.8";
    winapi_build = "0.1.1";
  };
  deps.x11_dl."2.18.3" = {
    lazy_static = "1.2.0";
    libc = "0.2.48";
    pkg_config = "0.3.14";
  };
  deps.xdg."2.2.0" = {};
  deps.xml_rs."0.8.0" = {};
  deps.yaml_rust."0.4.2" = {
    linked_hash_map = "0.5.1";
  };
}
